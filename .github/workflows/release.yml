name: Expo Build and Release

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'App version'
        required: true
        default: '1.0.0'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Benchmark
        id: benchmark
        working-directory: ./backend
        run: |
          pnpm test
          # Archive benchmark result files
          if [ -d "benchmarks" ]; then
            tar -czf benchmarks.tar.gz -C benchmarks .
          else
            echo "No benchmarks directory found."
          fi

        # Setup Google Cloud Authentication
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          token_format: 'access_token'

      # Configure Docker for GCP Artifact Registry
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker europe-west6-docker.pkg.dev

      # Get the version for Docker tag
      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            # Extract version from tag, removing both 'refs/tags/' and 'v' prefix if present
            VERSION=$(echo ${GITHUB_REF#refs/tags/} | sed 's/^v//')
          else
            VERSION=${{ github.event.inputs.version }}
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Build and push Docker image
      - name: Build and push Docker image
        working-directory: ./backend
        run: |
          docker build -t europe-west6-docker.pkg.dev/offlinery-439317/offlinery-backend/nestjs:${{ env.VERSION }} .
          docker push europe-west6-docker.pkg.dev/offlinery-439317/offlinery-backend/nestjs:${{ env.VERSION }}

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 19.x #v20 might have issues for some reason according to Web

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 6.32.9

      - name: Install dependencies
        working-directory: ./mobile
        run: |
          pnpm install:all

      - name: Setup Sentry CLI
        run: |
          curl -sL https://sentry.io/get-cli/ | bash
          sentry-cli --version

      - name: Create Sentry Release
        working-directory: ./mobile
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        run: |
          sentry-cli releases new ${{ env.VERSION }}
          sentry-cli releases set-commits ${{ env.VERSION }} --auto

      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Build on EAS
        working-directory: ./mobile
        run: |
          BUILD_URL=$(eas build --platform all --non-interactive --json | jq -r '.buildUrl')
          echo "BUILD_URL=$BUILD_URL" >> $GITHUB_ENV

      # Create archives for source maps
      - name: Archive Source Maps
        working-directory: ./mobile
        run: |
          # Archive Android source maps
          if [ -d "android/app/build/generated/sourcemaps" ]; then
            tar -czf android-sourcemaps.tar.gz -C android/app/build/generated/sourcemaps .
          fi
          
          # Archive iOS source maps
          if [ -d "ios/build/generated/sourcemaps" ]; then
            tar -czf ios-sourcemaps.tar.gz -C ios/build/generated/sourcemaps .
          fi

      # Upload source maps to Sentry after the build
      - name: Upload Source Maps to Sentry
        working-directory: ./mobile
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        run: |
          # Upload source maps for Android
          sentry-cli react-native sourcemaps upload \
            --release ${{ env.VERSION }} \
            --dist android \
            --platform android \
            android/app/build/generated/sourcemaps

          # Upload source maps for iOS
          sentry-cli react-native sourcemaps upload \
            --release ${{ env.VERSION }} \
            --dist ios \
            --platform ios \
            ios/build/generated/sourcemaps

          # Upload Proguard mappings for Android
          if [ -f "android/app/build/outputs/mapping/release/mapping.txt" ]; then
            sentry-cli upload-proguard \
              --android-manifest android/app/build/intermediates/merged_manifests/release/AndroidManifest.xml \
              --project ${{ secrets.SENTRY_PROJECT }} \
              --org ${{ secrets.SENTRY_ORG }} \
              android/app/build/outputs/mapping/release/mapping.txt
          fi

      - name: Finalize Sentry Release
        working-directory: ./mobile
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        run: |
          sentry-cli releases finalize ${{ env.VERSION }}

      - name: Update GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: |
            Expo Build URL: ${{ env.BUILD_URL }}
            Backend Docker Image: europe-west6-docker.pkg.dev/offlinery-439317/offlinery-backend/nestjs:${{ env.VERSION }}
          files: |
            mobile/android-sourcemaps.tar.gz
            mobile/ios-sourcemaps.tar.gz
            mobile/android/app/build/outputs/mapping/release/mapping.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            # Submit to app stores
      - name: Submit to App Store Connect (TestFlight)
        working-directory: ./mobile
        if: env.IOS_BUILD_ID != ''
        env:
          EXPO_APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }}
        run: |
          eas submit --platform ios --id ${{ env.IOS_BUILD_ID }} --non-interactive

      - name: Submit to Google Play Console (Internal Testing)
        working-directory: ./mobile
        if: env.ANDROID_BUILD_ID != ''
        env:
          EXPO_GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.EXPO_GOOGLE_SERVICE_ACCOUNT_JSON }}
        run: |
          eas submit --platform android --id ${{ env.ANDROID_BUILD_ID }} --track internal --non-interactive

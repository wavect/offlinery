/* tslint:disable */
/* eslint-disable */
/**
 * Offlinery
 * API of Offlinery
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { UserFeedbackRequestDTO } from "../models/index";
import { UserFeedbackRequestDTOToJSON } from "../models/index";
import * as runtime from "../runtime";

// We import this type even if it's unused to avoid additional
// template rendering logic. If the drawbacks of this approach
// are larger than the benefits, we can try another approach.
export interface UserFeedbackControllerCreateUserFeedbackRequest {
    userFeedbackRequestDTO: UserFeedbackRequestDTO;
}

/**
 * UserFeedbackApi - interface
 *
 * @export
 * @interface UserFeedbackApiInterface
 */
export interface UserFeedbackApiInterface {
    /**
     *
     * @summary Create a user feedback.
     * @param {UserFeedbackRequestDTO} userFeedbackRequestDTO The User\&#39;s feedback.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserFeedbackApiInterface
     */
    userFeedbackControllerCreateUserFeedbackRaw(
        requestParameters: UserFeedbackControllerCreateUserFeedbackRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<runtime.ApiResponse<void>>;

    /**
     * Create a user feedback.
     */
    userFeedbackControllerCreateUserFeedback(
        requestParameters: UserFeedbackControllerCreateUserFeedbackRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<void>;
}

/**
 *
 */
export class UserFeedbackApi
    extends runtime.BaseAPI
    implements UserFeedbackApiInterface
{
    /**
     * Create a user feedback.
     */
    async userFeedbackControllerCreateUserFeedbackRaw(
        requestParameters: UserFeedbackControllerCreateUserFeedbackRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<runtime.ApiResponse<void>> {
        if (requestParameters["userFeedbackRequestDTO"] == null) {
            throw new runtime.RequiredError(
                "userFeedbackRequestDTO",
                'Required parameter "userFeedbackRequestDTO" was null or undefined when calling userFeedbackControllerCreateUserFeedback().',
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters["Content-Type"] = "application/json";

        const response = await this.request(
            {
                path: `/user-feedback`,
                method: "POST",
                headers: headerParameters,
                query: queryParameters,
                body: UserFeedbackRequestDTOToJSON(
                    requestParameters["userFeedbackRequestDTO"],
                ),
            },
            initOverrides,
        );

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Create a user feedback.
     */
    async userFeedbackControllerCreateUserFeedback(
        requestParameters: UserFeedbackControllerCreateUserFeedbackRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<void> {
        await this.userFeedbackControllerCreateUserFeedbackRaw(
            requestParameters,
            initOverrides,
        );
    }
}

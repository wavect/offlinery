/* tslint:disable */
/* eslint-disable */
/**
 * Offlinery
 * API of Offlinery
 *
 * The version of the OpenAPI document: 1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @interface CreateUserReportDTO
 */
export interface CreateUserReportDTO {
    /**
     * The description of the incident
     * @type {string}
     * @memberof CreateUserReportDTO
     */
    incidentDescription: string;
    /**
     * Whether to keep the reporter updated on the report status
     * @type {boolean}
     * @memberof CreateUserReportDTO
     */
    keepReporterInTheLoop: boolean;
    /**
     * The type of incident
     * @type {string}
     * @memberof CreateUserReportDTO
     */
    incidentType: CreateUserReportDTOIncidentTypeEnum;
    /**
     * The ID of the user being reported
     * @type {string}
     * @memberof CreateUserReportDTO
     */
    reportedUserId: string;
    /**
     * The ID of the user making the report
     * @type {string}
     * @memberof CreateUserReportDTO
     */
    reportingUserId: string;
}

/**
 * @export
 */
export const CreateUserReportDTOIncidentTypeEnum = {
    Disrespectful: "Disrespectful",
    Sexual_harassment: "Sexual harassment",
    Violent_behavior: "Violent behavior",
    Other: "Other",
} as const;
export type CreateUserReportDTOIncidentTypeEnum =
    (typeof CreateUserReportDTOIncidentTypeEnum)[keyof typeof CreateUserReportDTOIncidentTypeEnum];

/**
 * Check if a given object implements the CreateUserReportDTO interface.
 */
export function instanceOfCreateUserReportDTO(
    value: object,
): value is CreateUserReportDTO {
    if (
        !("incidentDescription" in value) ||
        value["incidentDescription"] === undefined
    )
        return false;
    if (
        !("keepReporterInTheLoop" in value) ||
        value["keepReporterInTheLoop"] === undefined
    )
        return false;
    if (!("incidentType" in value) || value["incidentType"] === undefined)
        return false;
    if (!("reportedUserId" in value) || value["reportedUserId"] === undefined)
        return false;
    if (!("reportingUserId" in value) || value["reportingUserId"] === undefined)
        return false;
    return true;
}

export function CreateUserReportDTOFromJSON(json: any): CreateUserReportDTO {
    return CreateUserReportDTOFromJSONTyped(json, false);
}

export function CreateUserReportDTOFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean,
): CreateUserReportDTO {
    if (json == null) {
        return json;
    }
    return {
        incidentDescription: json["incidentDescription"],
        keepReporterInTheLoop: json["keepReporterInTheLoop"],
        incidentType: json["incidentType"],
        reportedUserId: json["reportedUserId"],
        reportingUserId: json["reportingUserId"],
    };
}

export function CreateUserReportDTOToJSON(
    value?: CreateUserReportDTO | null,
): any {
    if (value == null) {
        return value;
    }
    return {
        incidentDescription: value["incidentDescription"],
        keepReporterInTheLoop: value["keepReporterInTheLoop"],
        incidentType: value["incidentType"],
        reportedUserId: value["reportedUserId"],
        reportingUserId: value["reportingUserId"],
    };
}
